

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int* searchRange(int* nums, int numsSize, int target, int* returnSize){
    int start=0;
    int end = numsSize-1;
    int mid=-1;
    *returnSize=2;
    int* arr = (int*)malloc(sizeof(int)*2);
    arr[0]=-1;
    arr[1]=-1;
    
    if(numsSize==0)
        return arr;
    
    int result=-1;
    while(start<=end)
    {
        /*5,7,7,8,8,10   8    
    1,3,3,3,3   3
    2,2
    start=0, end =1  mid=0
    start=0,end =0   mid=0
    start=0 end=-1  mid=1
        
        
        */
        mid=(start+(end-start)/2);
        if(*(nums+mid)==target)
        {
            result=mid;
            end=mid-1;
        }
        else if(*(nums+mid)>target)
        {
            end=mid-1;
        }
        else
            start=mid+1;
    }
    if(result==-1){
        return arr;
    }
    arr[0]=result;
    
    start=0;
    end=numsSize-1;
    while(start<=end)
    {
        /*1,3,3,3,3  3
      1,3,3,3  3
      5,7,8,8,8,10
      2,2
    start=0 , end =1 ,mid=0
    start=1   end=1  mid=1
    start=2   end=1  mid=4    mid-1 / end...
    */
        mid=(start+(end-start)/2);
        if(*(nums+mid)==target)
        {
            result=mid;
            start=mid+1;
        }
        else if(*(nums+mid)<target)
        {
            start=mid+1;
        }
        else
        {
            end=mid-1;
        }
    }
    arr[1]=result;
     
return arr;
}
